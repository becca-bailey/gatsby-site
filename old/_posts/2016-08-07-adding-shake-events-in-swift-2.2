---
layout: post
title: Shake events in Swift 2.2
date: 2016-8-7
---

Swift is a very young language, and one of the joys of working with such a young language is just how quickly tutorials and documentation become outdated with each update. I can't tell you how many times I have turned to Google to solve a problem, and gotten outdated information.

One such problem arose when we wanted to add a shake event to our iOS tic tac toe application. After reading up on motion events in the [Swift docs](https://developer.apple.com/library/ios/documentation/EventHandling/Conceptual/EventHandlingiPhoneOS/motion_event_basics/motion_event_basics.html) and trying to decode a bunch of Objective-C, I turned [YouTube](https://www.youtube.com/watch?v=V95h1OpzyfA) to find a much simpler solution. In fact, I was stunned by how little code I had add to accomplish what I wanted.

1. Make your class a first responder.

In the view controller where you want to detect a shake event, add this code to make the class a first responder. Basically, this means that this class is now "listening" for certain events.

{% highlight swift %}
override public func canBecomeFirstResponder() -> Bool {
    return true
}
{% endhighlight %}

2. Specify the event that should take place when the motion begins and/or ends.

For example, I wanted to display a message when the shake motion begins and reset the game when it ends.

{% highlight swift %}
override public func motionBegan(motion: UIEventSubtype, withEvent event: UIEvent?) {
    interactor.warnReset()
}

override public func motionEnded(motion: UIEventSubtype, withEvent event: UIEvent?) {
    interactor.resetGame(GameConfig.game)
}
{% endhighlight %}

Note: `interactor` is a separate class that handles events in the view. Read more about it [here](/iOS-view-interactions)

Voila! That's it! We have a shake event. Magic.

[View the full code on Github](https://github.com/beccanelson/tttaas-iOS)
